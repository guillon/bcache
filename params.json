{
  "name": "bcache",
  "tagline": "Command outputs caching tool",
  "body": "\r\n[![Build Status](https://api.travis-ci.org/guillon/bcache.png?branch=master)](https://travis-ci.org/guillon/bcache/branches)\r\n[![Coverage Status](https://coveralls.io/repos/guillon/bcache/badge.svg?branch=master)](https://coveralls.io/r/guillon/bcache?branch=master)\r\n[![Issue Count](https://codeclimate.com/github/guillon/bcache/badges/issue_count.svg)](https://codeclimate.com/github/guillon/bcache)\r\n\r\n# Synopsis\r\n\r\nThe bcache utility is used for executing some commands and storing the\r\ncommands outputs to a cache. A further execution of the same command\r\nwill be skipped and the commands outputs will be extracted from the cache.\r\n\r\nThe bcache tool will store in cache the following commands outputs:\r\n- output files/dirs specified by the user,\r\n- stdout/stderr outputs,\r\n- the command exit code.\r\n\r\nNote that bcache stores to cache only when the command exits successfully\r\nwith exit code 0.\r\n\r\nFor instance in order to store a simple command output to cache, one as\r\nsimply to prefix the command with bcache as in (the `-d` option is used\r\nto output cache management information, just for the example):\r\n\r\n    $ bcache -d -- echo DONE\r\n    DONE\r\n    DEBUG: bcache: ...: updating cache .../4e/870f5a75d41be4e621f3959acb11f4c4eb3ea4\r\n\r\nIf re-executing the same command, the output is taken from cache:\r\n\r\n    $ bcache -d -- echo DONE\r\n    DEBUG: bcache: ...: reading from cache .../4e/870f5a75d41be4e621f3959acb11f4c4eb3ea4\r\n    DONE\r\n\r\nOne can inspect the actual command description with:\r\n\r\n    $ bcache --dump -- echo DONE\r\n    cmds:\r\n    - [echo, DONE]\r\n    cwd: .\r\n    env: []\r\n    inputs: []\r\n    outputs: []\r\n    venv: []\r\n\r\nOr dump the cache entry id with:\r\n\r\n    $ bcache --dump-id -- echo DONE\r\n    4e870f5a75d41be4e621f3959acb11f4c4eb3ea4\r\n\r\nNote that it is the user responsibility to ensure that execution of a\r\ncommand is unambiguous or can be considered unambiguous when executed on the\r\nsame machine and/or context.\r\n\r\nIn particular it is important to note that the following should be enforced by\r\nthe user:\r\n- actual execution directory does not change command outcomes. If so, the\r\ndirectory absolute path should be specified with `-w` option for instance.\r\n- actual command executable, system context and hidden dependencies do not\r\nchange command outcome. If so, use the `-i` or `--id` option to specify additional\r\nfiles or unique identifiers as input.\r\n- volatile environment variables do not change command outcomes. If so\r\nspecify these variables with `-e` option instead of `-v`.\r\n\r\nThe bcache tool as can be seen in the output of the command description\r\n(`--dump`) uses an empty environment in order to maximize possibilities of\r\ncache hits. Hence the user has to provide explicitly the necessary environment\r\nthrough the `-e` (`--env`) option or specify volatile environment vars that\r\nhas no influence on the command execution outcome with the `-v` (`--venv`)\r\noption.\r\n\r\n\r\n# Download\r\n\r\nDownload the bcache tool from the releases page:\r\nhttps://github.com/guillon/bcache/releases\r\n\r\nOr download the last stable version of the script from there:\r\nhttps://raw.githubusercontent.com/guillon/bcache/master/bcache\r\n\r\nFor instance:\r\n\r\n    $ wget -O ~/bin/bcache https://raw.githubusercontent.com/guillon/bcache/master/bcache\r\n    $ chmod +x ~/bin/bcache\r\n\r\n\r\n# Examples\r\n\r\nSection to be completed with more useful examples.\r\n\r\nGet the command line help with:\r\n\r\n    $ bcache --help\r\n    Usage: bcache [options] -- COMMAND...\r\n    \r\n    bcache utility, run a command or get outputs from cache.\r\n    \r\n    Options:\r\n      -h, --help            show this help message and exit\r\n      -c CACHE_DIR, --cache-dir=CACHE_DIR\r\n                            cache dir for command outputs (default: $HOME/.bcache)\r\n      -o OUTPUT, --output=OUTPUT\r\n                            output file/directory to be cached, may be multiple\r\n      -i INPUT, --input=INPUT\r\n                            optional file/directory input, may be multiple\r\n      -s SHELL, --shell=SHELL\r\n                            shell command line to execute, may be multiple\r\n      -e ENV, --env=ENV     env var to add as KEY=VALUE, may be multiple. Use '-'\r\n                            to reset\r\n      -v VENV, --venv=VENV  volatile env var to add as KEY, may be multiple. Use\r\n                            '-' to reset\r\n      -w CWD, --cwd=CWD     initial working dir for executed commands. Default:\r\n                            '.'\r\n      --id=ID               optional identifier for unique cache entry, may be\r\n                            multiple\r\n      --chain=CHAIN         optional identification file for reading/writing image\r\n                            ids\r\n      -f, --force           force re-execution without reading cache\r\n      -n, --no-store        do not store to cache\r\n      -y YAML, --yaml=YAML  input build yaml description\r\n      --dump                outputs yaml description to stdout and exit\r\n      --clean               clean cache entry for the command if any\r\n      --dump-id             outputs cache identity to stdout and exit\r\n    ...\r\n\r\n# Build and Install\r\n\r\nThis tool requires python 2.6.x, 2.7.x or >= 3.x.\r\n\r\nThe tool can be used directly without installation by executing\r\ndirectly bcache where downloaded.\r\n\r\nA makefile is provided anyway for completion and testing purpose.\r\n\r\nBuild with:\r\n\r\n    $ make all # a no-op actually\r\n\r\nRun unit tests with:\r\n\r\n    $ make -j8 check\r\n\r\nInstall with, for instance:\r\n\r\n    $ make install PREFIX=$HOME/local  # Default is PREFIX=/usr/local\r\n\r\n\r\n# References\r\n\r\nRefer to the project home page at:\r\nhttp://guillon.github.com/bcache\r\n\r\nFill issues and enhancement request at:\r\nhttps://github.com/guillon/bcache/issues\r\n\r\nRefer to the current build and validation status at:\r\nhttps://travis-ci.org/guillon/bcache?branches\r\n\r\nRefer to the code coverage status at:\r\nhttps://coveralls.io/r/guillon/bcache?branch=master\r\n\r\n\r\n# License\r\n\r\nThe tool is distributed under the GPLv2 license.\r\n\r\nRefer to the COPYING file: https://github.com/guillon/bcache/blob/master/COPYING\r\n\r\nRefer to the COPYRIGHT file: https://github.com/guillon/bcache/blob/master/COPYRIGHT\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}